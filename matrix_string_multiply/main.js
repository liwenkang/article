//字符串矩阵相乘计算器V0.0 作者:李文康 时间;2017年9月19日
//功能:可以计算 字母(只有字母的字符串),数字(单独使用) 的矩阵(m*n)相乘

//------------------------------注意-------------------------------------------------//
//当你输入"C1","C0",这种字母和1,字母和0,作为矩阵中的一项时,会发生错误(由于字符串拼接的问题)
//-----------------------------------------------------------------------------------//
//使用除0,1,-1,以外的数字和字母拼接后作为矩阵中的一项,此时计算不会发生错误
//-----------------------------------------------------------------------------------//
//tip: 你可以使用I,O等字母替代1,0,从而实现和字母拼接作为矩阵中一项,可以避免产生错误
//-----------------------------------------------------------------------------------//
//示例如下:
// var A = [                 var B = [                      result = [
//  ['c5','-s5','0','0'],     ['c6','-s6','0','0'],          ['c5c6','-c5s6','-s5','0'],
//  ['0','0','-1','0'],	      ['0','0','1','0'],             ['s6','c6','0','0'],
// 	['s5','c5','0','0'],      ['-s6','-c6','0','0'],         ['s5c6','-s5s6','c5','0'],
// 	['0','0','0','1'],        ['0','0','0','1'],             ['0','0','0','1']
// ]                         ]                              ]

var A = [
	['c5','-s5','0','0'],
	['0','0','-1','0'],
	['s5','c5','0','0'],
	['0','0','0','1'],
]

var B = [
	['c6','-s6','0','0'],
	['0','0','1','0'],
	['-s6','-c6','0','0'],
	['0','0','0','1'],
]

function limitLength(string) {
	var s = string

	if(s.indexOf("0") != -1) {
		//如果找到的话,那么清0
		s = ""
	}

	if(s !== "11"){
		s = s.replace(/1/g,"")
	}else {
		s = "1"
	}

	if(s.indexOf("--") != -1) {
		s = s.replace(/-/g,"")
	}
	if(s.indexOf("-") != -1) {
		s = s.replace("-","")
		s = "-" + s
	}
	return s
}

function main(a,b) {
	var A_row = a.length//行
	var A_column = a[0].length//列
	var B_row = b.length//行
	var B_column = b[0].length//列

	if(A_column != B_row) {
		alert("输入有误")
		return false
	}

	var result = [[],[],[],[]]

	for(var j = 0; j < A_row; j++) {
		for(var i = 0; i < B_column; i++) {
			for(var k = 0; k < A_column; k++) {
				result[j][i] += limitLength(A[j][k]+B[k][i])
			}
		}
	}
	for(var j = 0; j < A_row; j++) {
		for(var i = 0; i < B_column; i++) {
			result[j][i] = result[j][i].replace(/\+/g,"");
			result[j][i] = result[j][i].replace(undefined,"");
			if(result[j][i].length == 0) {
				result[j][i] = "0"
			}
		}
	}
	return result
}

window.onload = function () {
	var arr = main(A,B)
	log(arr)//在控制台输出
	var txt = ''
	for(var i = 0; i < arr.length; i++) {
		txt += arr[i] + '<br>'
	}
	var res = document.getElementById("result")
	res.innerHTML = txt//在页面输出
}

//下一版要改进的地方:
//1:实现纯数字的矩阵相乘
//2.根据用户的输入,自动判断是串数字的矩阵相乘,还是字符串型的矩阵相乘
//3.找到一个合适的交互方式让用户自己输入矩阵,并且在页面上整齐的打印出来